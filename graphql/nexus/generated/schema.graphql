### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  usuario: Usuario
}

type Cliente {
  comentario_post: [Comentario_Post]
  id: Int
  medicamentos: String
  nivel: String
  notificacao_comentario: [Notificacao_Comentario]
  usuario: [Usuario]
}

type Comentario_Post {
  cliente: [Cliente]
  coteudo: String
  id: Int
  nota: Int
  notificacao_comentario: [Notificacao_Comentario]
  profissional: [Profissional]
}

type Mutation {
  CadastroUsuario(SobreNome: String, cidade: String, cliente: clienteCreateInput, email: String!, genero: String, id: String, idade: String, imgem_perfil: imgemPerfil, name: String, profissional: profissionalCreateInput, senha: String!, telefone: String): AuthPayload!
  Cliente(medicamentos: String, nivel: String): Cliente
  Profissional(ambiente: String!, especial: String!, especialidade: String!, grupo: String!, idade: String!, imagens: String!, localatendimento: String!, qualificacao: String!, raio: String!, servico: String!): Profissional
  comentarioPost(coteudo: String, nota: Int): Comentario_Post
  criarImagem(imagen: String): imagem_perfil
  delatecomentarioPost(id: Int): Comentario_Post
  deleteNotificacao(id: Int): Notificacao_Comentario
  login(email: String!, senha: String!): AuthPayload
  notificacaoComentario(comentario: String, imagem_perfil: String): Notificacao_Comentario
  updateCliente(id: Int): Cliente
  updateProfissional(ambiente: String, especial: String, especialidade: String, grupo: String, id: Int, idade: String, imagens: String, localatendimento: String, qualificacao: String, raio: String, servico: String): Profissional
  updateUsuario(id: Int): Usuario
  updatecomentarioPost(id: Int): Comentario_Post
  updateimagem(id: Int): imagem_perfil
}

type Notificacao_Comentario {
  cliente: [Cliente]
  comentario: String
  comentario_post: [Comentario_Post]
  id: Int
  imgem_perfil: String
}

type Profissional {
  ambiente: String
  comentario_post: [Comentario_Post]
  especial: String
  especialidade: String
  grupo: String
  id: Int
  idade: String
  identificacaoProfissionalId: Int
  imagens: String
  localatendimento: String
  qualificacao: String
  raio: String
  servico: String
  usuario: [Usuario]
}

input ProfissionalWhereUniqueInput {
  ambiente: String
  especial: String
  especialidade: String
  grupo: Int
  id: Int
  idade: Int
  imagens: String
  localatendimento: String
  qualificacao: String
  raio: Int
}

type Query {
  TodosUsuario: [Usuario]
  perfil: Usuario
  todosPro: Profissional
}

type Usuario {
  SobreNome: String
  cidade: String
  cliente: [Cliente]
  email: String
  genero: String
  id: Int
  idade: String
  imgem_perfis: [imagem_perfil]
  name: String
  profissional: [Profissional]
  senha: String
  telefone: String
}

input UsuarioCreateInput {
  email: String
  relacionamentosUsuariom: [profissionalCreateInput]
  senha: String
}

input clienteCreateInput {
  id: Int!
  medicamentos: String
  nivel: Int
}

type imagem_perfil {
  id: Int
  imagen: String
  usuario: [Usuario]
}

input imgemPerfil {
  id: Int
  imagen: String
}

input profissionalCreateInput {
  UsuarioId: Int
  ambiente: String
  especial: String
  especialidade: String
  grupo: Int
  id: Int
  idade: String
  imagens: String
  localatendimento: String
  qualificacao: String
  raio: Int
}